/*									tab:4
 * COUNTER.comp - interface of simple comp to display a counter on LEDS  
 *
 * "Copyright (c) 2000 and The Regents of the University 
 * of California.  All rights reserved.
 *
 * Permission to use, copy, modify, and distribute this software and its
 * documentation for any purpose, without fee, and without written agreement is
 * hereby granted, provided that the above copyright notice and the following
 * two paragraphs appear in all copies of this software.
 * 
 * IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY FOR
 * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT
 * OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF THE UNIVERSITY OF
 * CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 * THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS
 * ON AN "AS IS" BASIS, AND THE UNIVERSITY OF CALIFORNIA HAS NO OBLIGATION TO
 * PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS."
 *
 * Authors:  Jason Hill and David Culler
 * Date:     Jan 30, 2001
 *
 *
 *  This is a component designed to show the benefit of the TOS component model.
 *  This simple component has a counter that it periodically writes to an output 
 *  device.  By changing the wiring diagram of the application, this output device
 *  can be either the LEDS or the RFM radio, or the UART. 
 *
 */

TOS_MODULE COUNTER;

ACCEPTS{
	char COUNTER_START(void);
	char COUNTER_INIT(void);
};

HANDLES{
	void COUNTER_CLOCK_EVENT(void);
	char COUNTER_OUTPUT_COMPLETE(char success);
};

USES{
	char COUNTER_SUB_CLOCK_INIT(char interval, char scale);
        char COUNTER_SUB_OUTPUT_INIT();
        char COUNTER_OUTPUT(int value);
};

SIGNALS{
};

